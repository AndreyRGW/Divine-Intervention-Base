

# Character Editor Skill Window


window = {
	name = "DI_adoption_window"
	parentanchor = top|right
	position = { -50 100 }
	size = { 300 100 }
	layer = windows_layer
	filter_mouse = all
	allow_outside = yes
	alwaystransparent = no
	
	using = Window_Background
	using = Window_Decoration
	movable = yes
	
	visible = "[GetVariableSystem.Exists('DI_adoption_window_visible')]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		on_finish = "[PdxGuiWidget.StackTop]"
	}
	
	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}
	
	
	vbox = {
		using = Window_Margins
		restrictparent_min = yes
		
		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = DI_adoption_window
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('DI_adoption_window_visible')]"
			}
		}

        widget = {
            size = { 600 200 }
            
            widget = {
				size = { 600 200 }
                datacontext = "[GetPlayer.MakeScope.Var('DI_adoption_selected_char').Char]"
        
                DI_portrait_shoulders = {
                    visible = "[Character.IsValid]"
					position = { 70 30 }
                    parentanchor = left
        
					text_label_center = {
                        parentanchor = hcenter|top
                        position = { 0 -5 }
                        text = DI_adoption_parent
                        default_format = "#low;italic"
                        max_width = 500
                    }

                    blockoverride "portrait_button_template_onclick"
                    {
                        onclick = "[GetVariableSystem.Toggle('DI_adoption_char_select_list_visible')]"
                    }
                }
        
                DI_portrait_shoulders = {
                    visible = "[Not(Character.IsValid)]"
					position = { 70 30 }
                    parentanchor = left
        
                    text_label_center = {
                        parentanchor = hcenter|top
                        position = { 0 -5 }
                        text = DI_select_adoption_parent
                        default_format = "#low;italic"
                        max_width = 500
                    }
        
                    blockoverride "onclick"
                    {
                        onclick = "[GetVariableSystem.Toggle('DI_adoption_char_select_list_visible')]"
                    }
                }
            }

			widget = {
				size = { 600 200 }
                datacontext = "[GetPlayer.MakeScope.Var('DI_adoption_selected_char_partner').Char]"
        
                DI_portrait_shoulders = {
                    visible = "[Character.IsValid]"
					position = { 200 30 }
                    parentanchor = left
        
					text_label_center = {
                        parentanchor = hcenter|top
                        position = { 0 -5 }
                        text = DI_adoption_parent_partner
                        default_format = "#low;italic"
                        max_width = 500
                    }

                    blockoverride "portrait_button_template_onclick"
                    {
                        onclick = "[GetVariableSystem.Toggle('DI_adoption_partner_char_select_list_visible')]"
                    }
                }
        
                DI_portrait_shoulders = {
                    visible = "[Not(Character.IsValid)]"
					position = { 200 30 }
                    parentanchor = left
        
                    text_label_center = {
                        parentanchor = hcenter|top
                        position = { 0 -5 }
                        text = DI_select_adoption_parent_partner
                        default_format = "#low;italic"
                        max_width = 500
                    }
        
                    blockoverride "onclick"
                    {
                        onclick = "[GetVariableSystem.Toggle('DI_adoption_partner_char_select_list_visible')]"
                    }
                }
            }

			widget = {
				size = { 600 200 }
                datacontext = "[GetPlayer.MakeScope.Var('DI_adoption_selected_char_child').Char]"
        
                DI_portrait_shoulders = {
                    visible = "[Character.IsValid]"
					position = { 400 30 }
                    parentanchor = left
        
					text_label_center = {
                        parentanchor = hcenter|top
                        position = { 0 -5 }
                        text = DI_adoption_child
                        default_format = "#low;italic"
                        max_width = 500
                    }

                    blockoverride "portrait_button_template_onclick"
                    {
                        onclick = "[GetVariableSystem.Toggle('DI_adoption_child_char_select_list_visible')]"
                    }
                }
        
                DI_portrait_shoulders = {
                    visible = "[Not(Character.IsValid)]"
					position = { 400 30 }
                    parentanchor = left
        
                    text_label_center = {
                        parentanchor = hcenter|top
                        position = { 0 -5 }
                        text = DI_select_adoption_child
                        default_format = "#low;italic"
                        max_width = 500
                    }
        
                    blockoverride "onclick"
                    {
                        onclick = "[GetVariableSystem.Toggle('DI_adoption_child_char_select_list_visible')]"
                    }
                }
            }
        }

		widget = {
			size = { 600 100 }

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				button_standard = {
					text = DI_adoption_button_initiate
					onclick = "[GetScriptedGui('DI_adoption').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				}

				button_standard = {
					text = DI_adoption_button_house
					onclick = "[GetScriptedGui('DI_adoption_house').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				}
			}
		}
    }
}

### Primary Parent Select List ###
window = {
	name = "DI_adoption_character_window"
	parentanchor = top|right
	position = { -600 100 }
	size = { 150 100 }
	layer = windows_layer
	filter_mouse = all
	allow_outside = yes
	alwaystransparent = no
	
	using = Window_Background
	using = Window_Decoration
	movable = yes
	visible = "[GetVariableSystem.Exists('DI_adoption_char_select_list_visible')]"
	
	
	vbox = {
		using = Window_Margins
		restrictparent_min = yes
		
		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = DI_select_adoption_parent
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('DI_adoption_char_select_list_visible')]"
			}
		}
		

		
		widget = {
			size = { 570 650 }
            vbox = {
				
				scrollbox = {
					name = "title_char_select_list"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content" {
					
						vbox = {
							datamodel = "[GetPlayer.MakeScope.GetList('pinned_characters')]"
							layoutpolicy_horizontal = expanding

							spacing = 10

							item = {
								widget = {
									layoutpolicy_horizontal = expanding
									datacontext = [Scope.GetCharacter]
									size = { 0 100 }
									visible = "[Character.IsAlive]"

									using = Background_Guest



									vbox = {
										layoutpolicy_horizontal = expanding
										spacing = 7
										button_standard_hover = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											onclick = "[GetScriptedGui('DI_adoption_select_char').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('target', GetPlayer.MakeScope).End)]"
											onclick = "[GetScriptedGui('DI_adoption_select_char_partner_init').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('target', GetPlayer.MakeScope).End)]"
											onclick = "[GetVariableSystem.Toggle('DI_adoption_char_select_list_visible')]"
											hbox = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding
												margin_right = 5
												spacing = 10

												portrait_head_small = {
												}


												vbox = {
													layoutpolicy_vertical = expanding
													layoutpolicy_horizontal = expanding
													spacing = 10
													margin_top = 15

													hbox = {
														layoutpolicy_horizontal = expanding

														hbox = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding


															vbox = {
																layoutpolicy_horizontal = expanding
																layoutpolicy_vertical = expanding
																
																
																	
																text_single = {
																	layoutpolicy_horizontal = expanding
																	text = "[Character.GetUINameNotMeNoTooltip]"
																	using = Font_Size_Medium
																	autoresize = no
																}
							

																text_single = {
																	layoutpolicy_horizontal = expanding
																	text = "[Character.GetRelationToString( GetPlayer )]"
																	default_format = "#low"
																	autoresize = no
																	align = nobaseline
																}

																expand = {}
															}
														}

													}


													expand = {}
												}


											}
										}

										divider = {
											layoutpolicy_horizontal = expanding
										}
										
									}
								}
							}
						}
					}
                }
            }
		}
	}
}

### Secondary Parent Select List ###
window = {
	name = "DI_adoption_partner_window"
	parentanchor = top|right
	position = { -600 100 }
	size = { 150 100 }
	layer = windows_layer
	filter_mouse = all
	allow_outside = yes
	alwaystransparent = no
	
	using = Window_Background
	using = Window_Decoration
	movable = yes
	visible = "[GetVariableSystem.Exists('DI_adoption_partner_char_select_list_visible')]"
	
	
	vbox = {
		using = Window_Margins
		restrictparent_min = yes
		
		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = DI_select_adoption_parent_partner
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('DI_adoption_partner_char_select_list_visible')]"
			}
		}
		

		
		widget = {
			size = { 570 650 }
            vbox = {
				
				scrollbox = {
					name = "title_char_select_list"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content" {
					
						vbox = {
							datamodel = "[GetPlayer.MakeScope.GetList('pinned_characters')]"
							layoutpolicy_horizontal = expanding

							spacing = 10

							item = {
								widget = {
									layoutpolicy_horizontal = expanding
									datacontext = [Scope.GetCharacter]
									size = { 0 100 }
									visible = "[Character.IsAlive]"

									using = Background_Guest



									vbox = {
										layoutpolicy_horizontal = expanding
										spacing = 7
										button_standard_hover = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											onclick = "[GetScriptedGui('DI_adoption_select_partner').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('target', GetPlayer.MakeScope).End)]"
											onclick = "[GetVariableSystem.Toggle('DI_adoption_partner_char_select_list_visible')]"
											hbox = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding
												margin_right = 5
												spacing = 10

												portrait_head_small = {
												}


												vbox = {
													layoutpolicy_vertical = expanding
													layoutpolicy_horizontal = expanding
													spacing = 10
													margin_top = 15

													hbox = {
														layoutpolicy_horizontal = expanding

														hbox = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding


															vbox = {
																layoutpolicy_horizontal = expanding
																layoutpolicy_vertical = expanding
																
																
																	
																text_single = {
																	layoutpolicy_horizontal = expanding
																	text = "[Character.GetUINameNotMeNoTooltip]"
																	using = Font_Size_Medium
																	autoresize = no
																}
							

																text_single = {
																	layoutpolicy_horizontal = expanding
																	text = "[Character.GetRelationToString( GetPlayer.MakeScope.Var('DI_adoption_selected_char').Char )]"
																	default_format = "#low"
																	autoresize = no
																	align = nobaseline
																}

																expand = {}
															}
														}

													}


													expand = {}
												}


											}
										}

										divider = {
											layoutpolicy_horizontal = expanding
										}
										
									}
								}
							}
						}
					}
                }
            }
		}
	}
}

### Child Select List ###
window = {
	name = "DI_adoption_child_window"
	parentanchor = top|right
	position = { -600 100 }
	size = { 150 100 }
	layer = windows_layer
	filter_mouse = all
	allow_outside = yes
	alwaystransparent = no
	
	using = Window_Background
	using = Window_Decoration
	movable = yes
	visible = "[GetVariableSystem.Exists('DI_adoption_child_char_select_list_visible')]"
	
	
	vbox = {
		using = Window_Margins
		restrictparent_min = yes
		
		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = DI_select_adoption_child
			}

			blockoverride "button_close"
			{
				onclick = "[GetVariableSystem.Toggle('DI_adoption_child_char_select_list_visible')]"
			}
		}
		

		
		widget = {
			size = { 570 650 }
            vbox = {
				
				scrollbox = {
					name = "title_char_select_list"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content" {
					
						vbox = {
							datamodel = "[GetPlayer.MakeScope.GetList('pinned_characters')]"
							layoutpolicy_horizontal = expanding

							spacing = 10

							item = {
								widget = {
									layoutpolicy_horizontal = expanding
									datacontext = [Scope.GetCharacter]
									size = { 0 100 }
									visible = "[Character.IsAlive]"

									using = Background_Guest



									vbox = {
										layoutpolicy_horizontal = expanding
										spacing = 7
										button_standard_hover = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											onclick = "[GetScriptedGui('DI_adoption_select_child').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('target', GetPlayer.MakeScope).End)]"
											onclick = "[GetVariableSystem.Toggle('DI_adoption_child_char_select_list_visible')]"
											hbox = {
												layoutpolicy_horizontal = expanding
												layoutpolicy_vertical = expanding
												margin_right = 5
												spacing = 10

												portrait_head_small = {
												}


												vbox = {
													layoutpolicy_vertical = expanding
													layoutpolicy_horizontal = expanding
													spacing = 10
													margin_top = 15

													hbox = {
														layoutpolicy_horizontal = expanding

														hbox = {
															layoutpolicy_horizontal = expanding
															layoutpolicy_vertical = expanding


															vbox = {
																layoutpolicy_horizontal = expanding
																layoutpolicy_vertical = expanding
																
																
																	
																text_single = {
																	layoutpolicy_horizontal = expanding
																	text = "[Character.GetUINameNotMeNoTooltip]"
																	using = Font_Size_Medium
																	autoresize = no
																}
							

																text_single = {
																	layoutpolicy_horizontal = expanding
																	text = "[Character.GetRelationToString( GetPlayer.MakeScope.Var('DI_adoption_selected_char').Char )]"
																	default_format = "#low"
																	autoresize = no
																	align = nobaseline
																}

																expand = {}
															}
														}

													}


													expand = {}
												}


											}
										}

										divider = {
											layoutpolicy_horizontal = expanding
										}
										
									}
								}
							}
						}
					}
                }
            }
		}
	}
}